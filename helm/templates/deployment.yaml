{{- if .Values.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "replik8s.name" . }}
  labels:
    {{- include "replik8s.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "replik8s.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "replik8s.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "replik8s.serviceAccountName" . }}
      containers:
      - name: replik8s
        env:
        {{- with .Values.persistentVolume }}
        - name: DATA_DIR
          value: /data
        {{- end }}
        {{- range $k, $v := .Values.envVars }}
        - name: {{ $k }}
          value: {{ quote $v }}
        {{- end }}
        image: "{{ include "replik8s.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- with .Values.persistentVolume }}
        volumeMounts:
        - name: data
          mountPath: /data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.persistentVolume }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "replik8s.name" $ }}
      {{- end }}
{{- end -}}
